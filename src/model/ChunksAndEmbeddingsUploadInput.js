/**
 * Carbon
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EmbeddingGenerators from './EmbeddingGenerators';

/**
 * The ChunksAndEmbeddingsUploadInput model module.
 * @module model/ChunksAndEmbeddingsUploadInput
 * @version 1.0.0
 */
class ChunksAndEmbeddingsUploadInput {
    /**
     * Constructs a new <code>ChunksAndEmbeddingsUploadInput</code>.
     * @alias module:model/ChunksAndEmbeddingsUploadInput
     * @param embeddingModel {module:model/EmbeddingGenerators} 
     * @param chunksAndEmbeddings {Object} 
     */
    constructor(embeddingModel, chunksAndEmbeddings) { 
        
        ChunksAndEmbeddingsUploadInput.initialize(this, embeddingModel, chunksAndEmbeddings);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, embeddingModel, chunksAndEmbeddings) { 
        obj['embedding_model'] = embeddingModel;
        obj['chunks_and_embeddings'] = chunksAndEmbeddings;
    }

    /**
     * Constructs a <code>ChunksAndEmbeddingsUploadInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChunksAndEmbeddingsUploadInput} obj Optional instance to populate.
     * @return {module:model/ChunksAndEmbeddingsUploadInput} The populated <code>ChunksAndEmbeddingsUploadInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChunksAndEmbeddingsUploadInput();

            if (data.hasOwnProperty('embedding_model')) {
                obj['embedding_model'] = EmbeddingGenerators.constructFromObject(data['embedding_model']);
            }
            if (data.hasOwnProperty('chunks_and_embeddings')) {
                obj['chunks_and_embeddings'] = ApiClient.convertToType(data['chunks_and_embeddings'], Object);
            }
            if (data.hasOwnProperty('overwrite_existing')) {
                obj['overwrite_existing'] = ApiClient.convertToType(data['overwrite_existing'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChunksAndEmbeddingsUploadInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChunksAndEmbeddingsUploadInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ChunksAndEmbeddingsUploadInput.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

ChunksAndEmbeddingsUploadInput.RequiredProperties = ["embedding_model", "chunks_and_embeddings"];

/**
 * @member {module:model/EmbeddingGenerators} embedding_model
 */
ChunksAndEmbeddingsUploadInput.prototype['embedding_model'] = undefined;

/**
 * @member {Object} chunks_and_embeddings
 */
ChunksAndEmbeddingsUploadInput.prototype['chunks_and_embeddings'] = undefined;

/**
 * @member {Object} overwrite_existing
 */
ChunksAndEmbeddingsUploadInput.prototype['overwrite_existing'] = undefined;






export default ChunksAndEmbeddingsUploadInput;

