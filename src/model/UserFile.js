/**
 * Carbon
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdditionalPresignedUrls from './AdditionalPresignedUrls';
import ChunkOverlap from './ChunkOverlap';
import ChunkSize from './ChunkSize';
import DataSourceType from './DataSourceType';
import EmbeddingProperties from './EmbeddingProperties';
import EnableAutoSync1 from './EnableAutoSync1';
import ExternalFileSyncStatuses from './ExternalFileSyncStatuses';
import ExternalUrl from './ExternalUrl';
import FileMetadata from './FileMetadata';
import GenerateSparseVectors1 from './GenerateSparseVectors1';
import LastSync from './LastSync';
import Name from './Name';
import OrganizationUserDataSourceId1 from './OrganizationUserDataSourceId1';
import ParentId from './ParentId';
import ParsedTextUrl from './ParsedTextUrl';
import PresignedUrl from './PresignedUrl';
import SourceCreatedAt from './SourceCreatedAt';
import SyncErrorMessage from './SyncErrorMessage';
import Tags3 from './Tags3';
import UserFileChunkProperties from './UserFileChunkProperties';
import UserFileFileStatistics from './UserFileFileStatistics';

/**
 * The UserFile model module.
 * @module model/UserFile
 * @version 1.0.0
 */
class UserFile {
    /**
     * Constructs a new <code>UserFile</code>.
     * @alias module:model/UserFile
     * @param id {Object} 
     * @param source {module:model/DataSourceType} 
     * @param organizationId {Object} 
     * @param organizationSuppliedUserId {Object} 
     * @param organizationUserDataSourceId {module:model/OrganizationUserDataSourceId1} 
     * @param externalFileId {Object} 
     * @param externalUrl {module:model/ExternalUrl} 
     * @param syncStatus {module:model/ExternalFileSyncStatuses} 
     * @param syncErrorMessage {module:model/SyncErrorMessage} 
     * @param lastSync {module:model/LastSync} 
     * @param tags {module:model/Tags3} 
     * @param fileStatistics {module:model/UserFileFileStatistics} 
     * @param fileMetadata {module:model/FileMetadata} 
     * @param embeddingProperties {module:model/EmbeddingProperties} 
     * @param chunkSize {module:model/ChunkSize} 
     * @param chunkOverlap {module:model/ChunkOverlap} 
     * @param chunkProperties {module:model/UserFileChunkProperties} 
     * @param name {module:model/Name} 
     * @param parentId {module:model/ParentId} 
     * @param enableAutoSync {module:model/EnableAutoSync1} 
     * @param presignedUrl {module:model/PresignedUrl} 
     * @param parsedTextUrl {module:model/ParsedTextUrl} 
     * @param additionalPresignedUrls {module:model/AdditionalPresignedUrls} 
     * @param skipEmbeddingGeneration {Object} 
     * @param sourceCreatedAt {module:model/SourceCreatedAt} 
     * @param generateSparseVectors {module:model/GenerateSparseVectors1} 
     * @param createdAt {Object} 
     * @param updatedAt {Object} 
     */
    constructor(id, source, organizationId, organizationSuppliedUserId, organizationUserDataSourceId, externalFileId, externalUrl, syncStatus, syncErrorMessage, lastSync, tags, fileStatistics, fileMetadata, embeddingProperties, chunkSize, chunkOverlap, chunkProperties, name, parentId, enableAutoSync, presignedUrl, parsedTextUrl, additionalPresignedUrls, skipEmbeddingGeneration, sourceCreatedAt, generateSparseVectors, createdAt, updatedAt) { 
        
        UserFile.initialize(this, id, source, organizationId, organizationSuppliedUserId, organizationUserDataSourceId, externalFileId, externalUrl, syncStatus, syncErrorMessage, lastSync, tags, fileStatistics, fileMetadata, embeddingProperties, chunkSize, chunkOverlap, chunkProperties, name, parentId, enableAutoSync, presignedUrl, parsedTextUrl, additionalPresignedUrls, skipEmbeddingGeneration, sourceCreatedAt, generateSparseVectors, createdAt, updatedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, source, organizationId, organizationSuppliedUserId, organizationUserDataSourceId, externalFileId, externalUrl, syncStatus, syncErrorMessage, lastSync, tags, fileStatistics, fileMetadata, embeddingProperties, chunkSize, chunkOverlap, chunkProperties, name, parentId, enableAutoSync, presignedUrl, parsedTextUrl, additionalPresignedUrls, skipEmbeddingGeneration, sourceCreatedAt, generateSparseVectors, createdAt, updatedAt) { 
        obj['id'] = id;
        obj['source'] = source;
        obj['organization_id'] = organizationId;
        obj['organization_supplied_user_id'] = organizationSuppliedUserId;
        obj['organization_user_data_source_id'] = organizationUserDataSourceId;
        obj['external_file_id'] = externalFileId;
        obj['external_url'] = externalUrl;
        obj['sync_status'] = syncStatus;
        obj['sync_error_message'] = syncErrorMessage;
        obj['last_sync'] = lastSync;
        obj['tags'] = tags;
        obj['file_statistics'] = fileStatistics;
        obj['file_metadata'] = fileMetadata;
        obj['embedding_properties'] = embeddingProperties;
        obj['chunk_size'] = chunkSize;
        obj['chunk_overlap'] = chunkOverlap;
        obj['chunk_properties'] = chunkProperties;
        obj['name'] = name;
        obj['parent_id'] = parentId;
        obj['enable_auto_sync'] = enableAutoSync;
        obj['presigned_url'] = presignedUrl;
        obj['parsed_text_url'] = parsedTextUrl;
        obj['additional_presigned_urls'] = additionalPresignedUrls;
        obj['skip_embedding_generation'] = skipEmbeddingGeneration;
        obj['source_created_at'] = sourceCreatedAt;
        obj['generate_sparse_vectors'] = generateSparseVectors;
        obj['created_at'] = createdAt;
        obj['updated_at'] = updatedAt;
    }

    /**
     * Constructs a <code>UserFile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserFile} obj Optional instance to populate.
     * @return {module:model/UserFile} The populated <code>UserFile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserFile();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], Object);
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = DataSourceType.constructFromObject(data['source']);
            }
            if (data.hasOwnProperty('organization_id')) {
                obj['organization_id'] = ApiClient.convertToType(data['organization_id'], Object);
            }
            if (data.hasOwnProperty('organization_supplied_user_id')) {
                obj['organization_supplied_user_id'] = ApiClient.convertToType(data['organization_supplied_user_id'], Object);
            }
            if (data.hasOwnProperty('organization_user_data_source_id')) {
                obj['organization_user_data_source_id'] = OrganizationUserDataSourceId1.constructFromObject(data['organization_user_data_source_id']);
            }
            if (data.hasOwnProperty('external_file_id')) {
                obj['external_file_id'] = ApiClient.convertToType(data['external_file_id'], Object);
            }
            if (data.hasOwnProperty('external_url')) {
                obj['external_url'] = ExternalUrl.constructFromObject(data['external_url']);
            }
            if (data.hasOwnProperty('sync_status')) {
                obj['sync_status'] = ExternalFileSyncStatuses.constructFromObject(data['sync_status']);
            }
            if (data.hasOwnProperty('sync_error_message')) {
                obj['sync_error_message'] = SyncErrorMessage.constructFromObject(data['sync_error_message']);
            }
            if (data.hasOwnProperty('last_sync')) {
                obj['last_sync'] = LastSync.constructFromObject(data['last_sync']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = Tags3.constructFromObject(data['tags']);
            }
            if (data.hasOwnProperty('file_statistics')) {
                obj['file_statistics'] = UserFileFileStatistics.constructFromObject(data['file_statistics']);
            }
            if (data.hasOwnProperty('file_metadata')) {
                obj['file_metadata'] = FileMetadata.constructFromObject(data['file_metadata']);
            }
            if (data.hasOwnProperty('embedding_properties')) {
                obj['embedding_properties'] = EmbeddingProperties.constructFromObject(data['embedding_properties']);
            }
            if (data.hasOwnProperty('chunk_size')) {
                obj['chunk_size'] = ChunkSize.constructFromObject(data['chunk_size']);
            }
            if (data.hasOwnProperty('chunk_overlap')) {
                obj['chunk_overlap'] = ChunkOverlap.constructFromObject(data['chunk_overlap']);
            }
            if (data.hasOwnProperty('chunk_properties')) {
                obj['chunk_properties'] = UserFileChunkProperties.constructFromObject(data['chunk_properties']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = Name.constructFromObject(data['name']);
            }
            if (data.hasOwnProperty('parent_id')) {
                obj['parent_id'] = ParentId.constructFromObject(data['parent_id']);
            }
            if (data.hasOwnProperty('enable_auto_sync')) {
                obj['enable_auto_sync'] = EnableAutoSync1.constructFromObject(data['enable_auto_sync']);
            }
            if (data.hasOwnProperty('presigned_url')) {
                obj['presigned_url'] = PresignedUrl.constructFromObject(data['presigned_url']);
            }
            if (data.hasOwnProperty('parsed_text_url')) {
                obj['parsed_text_url'] = ParsedTextUrl.constructFromObject(data['parsed_text_url']);
            }
            if (data.hasOwnProperty('additional_presigned_urls')) {
                obj['additional_presigned_urls'] = AdditionalPresignedUrls.constructFromObject(data['additional_presigned_urls']);
            }
            if (data.hasOwnProperty('skip_embedding_generation')) {
                obj['skip_embedding_generation'] = ApiClient.convertToType(data['skip_embedding_generation'], Object);
            }
            if (data.hasOwnProperty('source_created_at')) {
                obj['source_created_at'] = SourceCreatedAt.constructFromObject(data['source_created_at']);
            }
            if (data.hasOwnProperty('generate_sparse_vectors')) {
                obj['generate_sparse_vectors'] = GenerateSparseVectors1.constructFromObject(data['generate_sparse_vectors']);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], Object);
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserFile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserFile</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UserFile.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `organization_user_data_source_id`
        if (data['organization_user_data_source_id']) { // data not null
          OrganizationUserDataSourceId1.validateJSON(data['organization_user_data_source_id']);
        }
        // validate the optional field `external_url`
        if (data['external_url']) { // data not null
          ExternalUrl.validateJSON(data['external_url']);
        }
        // validate the optional field `sync_error_message`
        if (data['sync_error_message']) { // data not null
          SyncErrorMessage.validateJSON(data['sync_error_message']);
        }
        // validate the optional field `last_sync`
        if (data['last_sync']) { // data not null
          LastSync.validateJSON(data['last_sync']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Tags3.validateJSON(data['tags']);
        }
        // validate the optional field `file_statistics`
        if (data['file_statistics']) { // data not null
          UserFileFileStatistics.validateJSON(data['file_statistics']);
        }
        // validate the optional field `file_metadata`
        if (data['file_metadata']) { // data not null
          FileMetadata.validateJSON(data['file_metadata']);
        }
        // validate the optional field `embedding_properties`
        if (data['embedding_properties']) { // data not null
          EmbeddingProperties.validateJSON(data['embedding_properties']);
        }
        // validate the optional field `chunk_size`
        if (data['chunk_size']) { // data not null
          ChunkSize.validateJSON(data['chunk_size']);
        }
        // validate the optional field `chunk_overlap`
        if (data['chunk_overlap']) { // data not null
          ChunkOverlap.validateJSON(data['chunk_overlap']);
        }
        // validate the optional field `chunk_properties`
        if (data['chunk_properties']) { // data not null
          UserFileChunkProperties.validateJSON(data['chunk_properties']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          Name.validateJSON(data['name']);
        }
        // validate the optional field `parent_id`
        if (data['parent_id']) { // data not null
          ParentId.validateJSON(data['parent_id']);
        }
        // validate the optional field `enable_auto_sync`
        if (data['enable_auto_sync']) { // data not null
          EnableAutoSync1.validateJSON(data['enable_auto_sync']);
        }
        // validate the optional field `presigned_url`
        if (data['presigned_url']) { // data not null
          PresignedUrl.validateJSON(data['presigned_url']);
        }
        // validate the optional field `parsed_text_url`
        if (data['parsed_text_url']) { // data not null
          ParsedTextUrl.validateJSON(data['parsed_text_url']);
        }
        // validate the optional field `additional_presigned_urls`
        if (data['additional_presigned_urls']) { // data not null
          AdditionalPresignedUrls.validateJSON(data['additional_presigned_urls']);
        }
        // validate the optional field `source_created_at`
        if (data['source_created_at']) { // data not null
          SourceCreatedAt.validateJSON(data['source_created_at']);
        }
        // validate the optional field `generate_sparse_vectors`
        if (data['generate_sparse_vectors']) { // data not null
          GenerateSparseVectors1.validateJSON(data['generate_sparse_vectors']);
        }

        return true;
    }


}

UserFile.RequiredProperties = ["id", "source", "organization_id", "organization_supplied_user_id", "organization_user_data_source_id", "external_file_id", "external_url", "sync_status", "sync_error_message", "last_sync", "tags", "file_statistics", "file_metadata", "embedding_properties", "chunk_size", "chunk_overlap", "chunk_properties", "name", "parent_id", "enable_auto_sync", "presigned_url", "parsed_text_url", "additional_presigned_urls", "skip_embedding_generation", "source_created_at", "generate_sparse_vectors", "created_at", "updated_at"];

/**
 * @member {Object} id
 */
UserFile.prototype['id'] = undefined;

/**
 * @member {module:model/DataSourceType} source
 */
UserFile.prototype['source'] = undefined;

/**
 * @member {Object} organization_id
 */
UserFile.prototype['organization_id'] = undefined;

/**
 * @member {Object} organization_supplied_user_id
 */
UserFile.prototype['organization_supplied_user_id'] = undefined;

/**
 * @member {module:model/OrganizationUserDataSourceId1} organization_user_data_source_id
 */
UserFile.prototype['organization_user_data_source_id'] = undefined;

/**
 * @member {Object} external_file_id
 */
UserFile.prototype['external_file_id'] = undefined;

/**
 * @member {module:model/ExternalUrl} external_url
 */
UserFile.prototype['external_url'] = undefined;

/**
 * @member {module:model/ExternalFileSyncStatuses} sync_status
 */
UserFile.prototype['sync_status'] = undefined;

/**
 * @member {module:model/SyncErrorMessage} sync_error_message
 */
UserFile.prototype['sync_error_message'] = undefined;

/**
 * @member {module:model/LastSync} last_sync
 */
UserFile.prototype['last_sync'] = undefined;

/**
 * @member {module:model/Tags3} tags
 */
UserFile.prototype['tags'] = undefined;

/**
 * @member {module:model/UserFileFileStatistics} file_statistics
 */
UserFile.prototype['file_statistics'] = undefined;

/**
 * @member {module:model/FileMetadata} file_metadata
 */
UserFile.prototype['file_metadata'] = undefined;

/**
 * @member {module:model/EmbeddingProperties} embedding_properties
 */
UserFile.prototype['embedding_properties'] = undefined;

/**
 * @member {module:model/ChunkSize} chunk_size
 */
UserFile.prototype['chunk_size'] = undefined;

/**
 * @member {module:model/ChunkOverlap} chunk_overlap
 */
UserFile.prototype['chunk_overlap'] = undefined;

/**
 * @member {module:model/UserFileChunkProperties} chunk_properties
 */
UserFile.prototype['chunk_properties'] = undefined;

/**
 * @member {module:model/Name} name
 */
UserFile.prototype['name'] = undefined;

/**
 * @member {module:model/ParentId} parent_id
 */
UserFile.prototype['parent_id'] = undefined;

/**
 * @member {module:model/EnableAutoSync1} enable_auto_sync
 */
UserFile.prototype['enable_auto_sync'] = undefined;

/**
 * @member {module:model/PresignedUrl} presigned_url
 */
UserFile.prototype['presigned_url'] = undefined;

/**
 * @member {module:model/ParsedTextUrl} parsed_text_url
 */
UserFile.prototype['parsed_text_url'] = undefined;

/**
 * @member {module:model/AdditionalPresignedUrls} additional_presigned_urls
 */
UserFile.prototype['additional_presigned_urls'] = undefined;

/**
 * @member {Object} skip_embedding_generation
 */
UserFile.prototype['skip_embedding_generation'] = undefined;

/**
 * @member {module:model/SourceCreatedAt} source_created_at
 */
UserFile.prototype['source_created_at'] = undefined;

/**
 * @member {module:model/GenerateSparseVectors1} generate_sparse_vectors
 */
UserFile.prototype['generate_sparse_vectors'] = undefined;

/**
 * @member {Object} created_at
 */
UserFile.prototype['created_at'] = undefined;

/**
 * @member {Object} updated_at
 */
UserFile.prototype['updated_at'] = undefined;






export default UserFile;

