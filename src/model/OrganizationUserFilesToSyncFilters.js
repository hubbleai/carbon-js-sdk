/**
 * Carbon
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EmbeddingGenerators from './EmbeddingGenerators';
import ExternalFileIds from './ExternalFileIds';
import Ids from './Ids';
import Name from './Name';
import OrganizationUserDataSourceId from './OrganizationUserDataSourceId';
import ParentFileIds1 from './ParentFileIds1';
import Source1 from './Source1';
import SyncStatuses from './SyncStatuses';
import Tags4 from './Tags4';
import TagsV21 from './TagsV21';

/**
 * The OrganizationUserFilesToSyncFilters model module.
 * @module model/OrganizationUserFilesToSyncFilters
 * @version 1.0.0
 */
class OrganizationUserFilesToSyncFilters {
    /**
     * Constructs a new <code>OrganizationUserFilesToSyncFilters</code>.
     * @alias module:model/OrganizationUserFilesToSyncFilters
     */
    constructor() { 
        
        OrganizationUserFilesToSyncFilters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrganizationUserFilesToSyncFilters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrganizationUserFilesToSyncFilters} obj Optional instance to populate.
     * @return {module:model/OrganizationUserFilesToSyncFilters} The populated <code>OrganizationUserFilesToSyncFilters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrganizationUserFilesToSyncFilters();

            if (data.hasOwnProperty('source')) {
                obj['source'] = Source1.constructFromObject(data['source']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = Name.constructFromObject(data['name']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = Tags4.constructFromObject(data['tags']);
            }
            if (data.hasOwnProperty('tags_v2')) {
                obj['tags_v2'] = TagsV21.constructFromObject(data['tags_v2']);
            }
            if (data.hasOwnProperty('ids')) {
                obj['ids'] = Ids.constructFromObject(data['ids']);
            }
            if (data.hasOwnProperty('external_file_ids')) {
                obj['external_file_ids'] = ExternalFileIds.constructFromObject(data['external_file_ids']);
            }
            if (data.hasOwnProperty('sync_statuses')) {
                obj['sync_statuses'] = SyncStatuses.constructFromObject(data['sync_statuses']);
            }
            if (data.hasOwnProperty('parent_file_ids')) {
                obj['parent_file_ids'] = ParentFileIds1.constructFromObject(data['parent_file_ids']);
            }
            if (data.hasOwnProperty('organization_user_data_source_id')) {
                obj['organization_user_data_source_id'] = OrganizationUserDataSourceId.constructFromObject(data['organization_user_data_source_id']);
            }
            if (data.hasOwnProperty('embedding_generators')) {
                obj['embedding_generators'] = EmbeddingGenerators.constructFromObject(data['embedding_generators']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrganizationUserFilesToSyncFilters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrganizationUserFilesToSyncFilters</code>.
     */
    static validateJSON(data) {
        // validate the optional field `source`
        if (data['source']) { // data not null
          Source1.validateJSON(data['source']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          Name.validateJSON(data['name']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Tags4.validateJSON(data['tags']);
        }
        // validate the optional field `tags_v2`
        if (data['tags_v2']) { // data not null
          TagsV21.validateJSON(data['tags_v2']);
        }
        // validate the optional field `ids`
        if (data['ids']) { // data not null
          Ids.validateJSON(data['ids']);
        }
        // validate the optional field `external_file_ids`
        if (data['external_file_ids']) { // data not null
          ExternalFileIds.validateJSON(data['external_file_ids']);
        }
        // validate the optional field `sync_statuses`
        if (data['sync_statuses']) { // data not null
          SyncStatuses.validateJSON(data['sync_statuses']);
        }
        // validate the optional field `parent_file_ids`
        if (data['parent_file_ids']) { // data not null
          ParentFileIds1.validateJSON(data['parent_file_ids']);
        }
        // validate the optional field `organization_user_data_source_id`
        if (data['organization_user_data_source_id']) { // data not null
          OrganizationUserDataSourceId.validateJSON(data['organization_user_data_source_id']);
        }
        // validate the optional field `embedding_generators`
        if (data['embedding_generators']) { // data not null
          EmbeddingGenerators.validateJSON(data['embedding_generators']);
        }

        return true;
    }


}



/**
 * @member {module:model/Source1} source
 */
OrganizationUserFilesToSyncFilters.prototype['source'] = undefined;

/**
 * @member {module:model/Name} name
 */
OrganizationUserFilesToSyncFilters.prototype['name'] = undefined;

/**
 * @member {module:model/Tags4} tags
 */
OrganizationUserFilesToSyncFilters.prototype['tags'] = undefined;

/**
 * @member {module:model/TagsV21} tags_v2
 */
OrganizationUserFilesToSyncFilters.prototype['tags_v2'] = undefined;

/**
 * @member {module:model/Ids} ids
 */
OrganizationUserFilesToSyncFilters.prototype['ids'] = undefined;

/**
 * @member {module:model/ExternalFileIds} external_file_ids
 */
OrganizationUserFilesToSyncFilters.prototype['external_file_ids'] = undefined;

/**
 * @member {module:model/SyncStatuses} sync_statuses
 */
OrganizationUserFilesToSyncFilters.prototype['sync_statuses'] = undefined;

/**
 * @member {module:model/ParentFileIds1} parent_file_ids
 */
OrganizationUserFilesToSyncFilters.prototype['parent_file_ids'] = undefined;

/**
 * @member {module:model/OrganizationUserDataSourceId} organization_user_data_source_id
 */
OrganizationUserFilesToSyncFilters.prototype['organization_user_data_source_id'] = undefined;

/**
 * @member {module:model/EmbeddingGenerators} embedding_generators
 */
OrganizationUserFilesToSyncFilters.prototype['embedding_generators'] = undefined;






export default OrganizationUserFilesToSyncFilters;

