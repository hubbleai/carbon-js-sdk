/**
 * Carbon
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CarbonJsSdk);
  }
}(this, function(expect, CarbonJsSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CarbonJsSdk.OrganizationUserDataSourceAPI();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrganizationUserDataSourceAPI', function() {
    it('should create an instance of OrganizationUserDataSourceAPI', function() {
      // uncomment below and update the code to test OrganizationUserDataSourceAPI
      //var instance = new CarbonJsSdk.OrganizationUserDataSourceAPI();
      //expect(instance).to.be.a(CarbonJsSdk.OrganizationUserDataSourceAPI);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new CarbonJsSdk.OrganizationUserDataSourceAPI();
      //expect(instance).to.be();
    });

    it('should have the property dataSourceExternalId (base name: "data_source_external_id")', function() {
      // uncomment below and update the code to test the property dataSourceExternalId
      //var instance = new CarbonJsSdk.OrganizationUserDataSourceAPI();
      //expect(instance).to.be();
    });

    it('should have the property dataSourceType (base name: "data_source_type")', function() {
      // uncomment below and update the code to test the property dataSourceType
      //var instance = new CarbonJsSdk.OrganizationUserDataSourceAPI();
      //expect(instance).to.be();
    });

    it('should have the property syncStatus (base name: "sync_status")', function() {
      // uncomment below and update the code to test the property syncStatus
      //var instance = new CarbonJsSdk.OrganizationUserDataSourceAPI();
      //expect(instance).to.be();
    });

    it('should have the property sourceItemsSyncedAt (base name: "source_items_synced_at")', function() {
      // uncomment below and update the code to test the property sourceItemsSyncedAt
      //var instance = new CarbonJsSdk.OrganizationUserDataSourceAPI();
      //expect(instance).to.be();
    });

    it('should have the property organizationUserId (base name: "organization_user_id")', function() {
      // uncomment below and update the code to test the property organizationUserId
      //var instance = new CarbonJsSdk.OrganizationUserDataSourceAPI();
      //expect(instance).to.be();
    });

    it('should have the property organizationId (base name: "organization_id")', function() {
      // uncomment below and update the code to test the property organizationId
      //var instance = new CarbonJsSdk.OrganizationUserDataSourceAPI();
      //expect(instance).to.be();
    });

    it('should have the property organizationSuppliedUserId (base name: "organization_supplied_user_id")', function() {
      // uncomment below and update the code to test the property organizationSuppliedUserId
      //var instance = new CarbonJsSdk.OrganizationUserDataSourceAPI();
      //expect(instance).to.be();
    });

    it('should have the property revokedAccess (base name: "revoked_access")', function() {
      // uncomment below and update the code to test the property revokedAccess
      //var instance = new CarbonJsSdk.OrganizationUserDataSourceAPI();
      //expect(instance).to.be();
    });

    it('should have the property lastSyncedAt (base name: "last_synced_at")', function() {
      // uncomment below and update the code to test the property lastSyncedAt
      //var instance = new CarbonJsSdk.OrganizationUserDataSourceAPI();
      //expect(instance).to.be();
    });

    it('should have the property lastSyncAction (base name: "last_sync_action")', function() {
      // uncomment below and update the code to test the property lastSyncAction
      //var instance = new CarbonJsSdk.OrganizationUserDataSourceAPI();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new CarbonJsSdk.OrganizationUserDataSourceAPI();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new CarbonJsSdk.OrganizationUserDataSourceAPI();
      //expect(instance).to.be();
    });

  });

}));
